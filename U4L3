import turtle

def modify(ln):
    mod_string = ""
    badChars = ['"', ','] 
    ln = ln.strip()  
    for c in ln:
   
        if c not in badChars:
            mod_string = mod_string + c
    return mod_string 

def writeDot(obj, rad, color):
    obj.pendown()
    obj.dot(rad, color)
    obj.penup()

fh = open("smiley_emoji_mod.xpm", "r")  
color_data = fh.readline()
color_data = (modify(color_data))


[cols, rows, colors] = color_data.split()
rows = int(rows)
cols = int(cols)
colors = int(colors)

colorData = {}  


for i in range(colors):
    cLine = fh.readline()
    cLine = modify(cLine)
    [sym, c, color] = cLine.split()
    colorData[sym] = color  


print(colorData)

xmp = []

for x in range(rows):  
    f1 = fh.readline()
    f1 = modify(f1)
    xmp.append(f1)

t = turtle.Turtle()
turtle.bgcolor('gray40')
turtle.tracer(0,0)

t.penup()
t.forward(-1*(cols//2))
t.left(90)
t.forward(rows//2)
t.right(90)

for y in range(rows):
    for x in range(cols):
        sym = xmp[y][x]  # Get the symbol representing the pixel
        color = colorData.get(sym, "black")  # Get the associated color, default to black
        writedot = (t, 4, color)
        t.forward(1)
    t.forward(-1*cols)
    t.right(90)
    t.forward(1)
    t.left(90)

fh.close()


